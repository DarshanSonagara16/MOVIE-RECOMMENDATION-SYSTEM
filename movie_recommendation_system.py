# -*- coding: utf-8 -*-
"""Movie Recommendation System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11Gwy0iAChomNZ1lcbXjIvlIKEIEJg1uE

Movie Recommendation System

IMPORT LIBRARY
"""

import pandas as pd

import numpy as np

"""  IMPORT DATASET"""

df = pd.read_csv('/content/Movies Recommendation.csv')

df.head()

df.info()

df.shape

df.columns

"""GET FEATURE SELECTION"""

df_features = df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

df_features.shape

df_features

x = df_features['Movie_Genre'] + ' ' + df_features['Movie_Keywords'] + ' ' + df_features['Movie_Tagline'] + ' ' + df_features['Movie_Cast'] + ' ' + df_features['Movie_Director']

x.shape

"""Get Feature Text Conversion to Tokens"""

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf = TfidfVectorizer()

x = tfidf.fit_transform(x)

x.shape

print(x)

"""Get Similarity Score Using Cosine Similarity"""

from sklearn.metrics.pairwise import cosine_similarity

similarity_score = cosine_similarity(x)

similarity_score

similarity_score.shape

"""GET MOVIE NAME AS INPUT FROME USER AND VALIDATE FOR CLOSEST SPELLING"""

favrioute_movie_name = input('Enter your favourite movie name : ')

All_movies_title_list = df['Movie_Title'].tolist()

import difflib

Movie_difflib = difflib.get_close_matches(favrioute_movie_name,All_movies_title_list)
print(Movie_difflib)

Close_match_movie_name = Movie_difflib[0]
print(Close_match_movie_name)

Index_of_close_match_movie = df[df.Movie_Title == Close_match_movie_name]['Movie_ID'].values[0]
print(Index_of_close_match_movie)

# getting  a list of similer movies
Recommendation_score = list(enumerate(similarity_score[Index_of_close_match_movie]))
print(Recommendation_score)

len(Recommendation_score)

"""GET ALL MOVIE SORT BASED ON RECOMMENDATION SCORE WRT FAVOURITE MOVIE"""

sorted_similar_movies = sorted(Recommendation_score,key = lambda x:x[1],reverse = True)
print(sorted_similar_movies)

print('Top 30 movies suggested for you : \n')

i=1

for movie in sorted_similar_movies:
  index = movie[0]
  title_from_index = df[df.index == index]['Movie_Title'].values[0]
  if(i<31):
    print(i,'.',title_from_index)
    i+=1

"""Top 10 Movie Recommendation system"""

list_of_all_titles = df['Movie_Title'].tolist()
Find_close_match = difflib.get_close_matches(favrioute_movie_name,list_of_all_titles)
Close_match = Find_close_match[0]
Index_of_movie = df[df.Movie_Title == Close_match]['Movie_ID'].values[0]
Recommendation_score = list(enumerate(similarity_score[Index_of_movie]))
sorted_similar_movies = sorted(Recommendation_score,key = lambda x:x[1],reverse = True)
print('Top 10 movies suggested for you : \n')
i=1
for movie in sorted_similar_movies:
    index = movie[0]
    title_from_index = df[df.index == index]['Movie_Title'].values[0]
    if(i<11):
        print(i,'.',title_from_index)
        i+=1